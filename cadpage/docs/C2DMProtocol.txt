
**** Cadpage C2DM messaging protocol
    
Stuff we need from you
First an HTTP address that cadpage will use to communicate with your servers.
A name or title of your service
A short one line description, good place to sell why users should use your service
A longer text description, more of the same
Optional set of Icons we will display with your service.  These are all views
of the same logo that are used for different screen resolutions.  Size if flexible
but shouldn't be too far off the standard which is.
  72x72 pixel
  48x48 pixel
  36x36 pixel
If you want to make this one include the name of your service, it can be a lot wider.

There is also room for a smaller status Icon that I can put in the call detail
window for calls received from your service.  Icon sizes for this are
  48x48
  32x32
  24x24
  

None of this is set in stone yet.  If simple changes will make it easier to code
the web interface, by all means lets change them.

For CodeMessaging
    vendor code: CodeMessaging
    SMS trigger: >CMG
    
For Active911
    vender code: Active911
    SMS trigger: >A91

You have to set up a base HTTP address that Cadpage will use to communicate with
your servers.  Cadpage will send the following parameter information to this address

req=info       general request for information about your company and service
    This will come from a web browser, you can do any interaction you want with it
    
req=profile    request by user for specific information about their account
    vendor          Vendor code
    account         Account number/string reported in REGISTER request to device
    phone           Phone number reported in REGISTER request to device
    token           Security token reported in REGISTER request to device
    type            C2DM for now (Another code my be used in future for Apple Push connections)
    CadpageRegId    New Cadpage registration ID

    This will come from a web browser, you can do any interaction you want with it

req=register - initial user request to register phone
    phone           Phone number if we have it (for Android tablets we probably will not)
    type            C2DM for now (Another code my be used in future for Apple Push connections)
    CadpageRegId    Cadpage registration ID, this is what you need to send messages to this device
    version         Cadpage client version

    This also comes from a web browser.  If you redirect them to other links, it is
    your responsibility to preserve the passed parameters, either by adding them to
    the directed links or saving them as cookies.
    
    A successful registration should send REGISTER request to the device which will
    include the user account number and security token
    
req=reregister  Used by Cadpage to report a change to the device registration ID
    vendor          Vendor code
    account         Account number/string reported in REGISTER request to device
    phone           Phone number reported in REGISTER request to device
    token           Security token reported in REGISTER request to device
    type            C2DM for now (Another code my be used in future for Apple Push connections)
    CadpageRegId    New Cadpage registration ID
    version         Cadpage client version
    
    Return an 200 - OK if successful
              299 - registration is successful, but the registration ID we passed is known 
                    to be non-functional and should be replaced
              400 - ERROR if device is not found or has been deregistered
              Anything else indicates link is broken but fixable.  In a broken
              state Cadpage will attempt a reregister with the old account
              and token information when user attempts to reregister
    
req=unregister     Used by Cadpage to inidicate user request to unregister their phone  
    vendor          Vendor code
    account         Account number/string reported in REGISTER request to device
    phone           Phone number reported in REGISTER request to device
    token           Security token reported in REGISTER request to device
    type            C2DM for now (Another code my be used in future for Apple Push connections)
    CadpageRegId    New Cadpage registration ID
    version         Cadpage client version
    
    Return an OK or ERROR response code to indicate success or failure
    
    If user is not registered with your service, you should send an req=unregister
    request to the registration ID that is passed.
    
Once you have a Cadpage registration ID, you can send messages to the device.  The
technical details are explained at http://code.google.com/android/c2dm/

You have to use
account: alerts@cadpage.org
password: c@dpagealerts

The message you send to Cadpage consists of set of name/value pairs.  The name
keywords Cadpage will look for are

type:   Message type which can take following values
        REGISTER - report successful cadpage registration
        UNREGISTER - report user initiated request to unregister from your servers
        PING - Cadpage will initiate automatic response to server
        PAGE (or anything not listed above) - alert page
        
For REGISTER type
vendor:     Assigned vendor code 
account:    Users account number with your service
token:      Security token that will be reported back to your servers with
            re-register and unregister requests
            
For UNREGISTER type            
vendor:     Assigned vendor code 
            
For regular message requests    
Either content or contentURL must be specified, everything else is optional.    
from - Sender address (default C2DM)
subject - Message subject (optional)
content - Actual message content
content_url - URL from from which message content can be retrieved 
             (use only if sending actual content exceeds the maximum size limit)
format - Format/location parsing code (default, use user configured location code)
vendor - Your vendor code.  Not required, but it does help us tag the message display
         as coming through your service
call_id - optional identification code to identify this call on vendor system         
unix_time - date/time you received page from dispatch, as a unix timestamp 
            (seconds since midnight Jan 1, 1970)
info_url - URL of web page containing additional information about call.            

For everything
ack_url:  URL Cadpage will connect with to acknowledge message status (optional)
ack_req:  String of characters indicating what kind manual responses may be sent
          A - ACK merely indicates user has pressed a button or done something
              to acknowledge the call
          R - RESP user indicates they are responding
          N - NO user indicates that they are not responding
          L - Request user location (again only if user has enabled location
              services and allowed Cadpage to report this info
              An L code may be followed by two numbers separated with a slash,
              as in L300/30.  This tells Cadpage to continue sending periodic
              location reports for 300 seconds at 30 second intervals
          P - Request user payment status
          
          [...] - Custom Response menu.  The response menu consists of any
          number of response definition separated by semicolons.  Each
          response definition look like
          <code>=<desc>
          where code is the code that will be reported to the server when this 
                     response is selected
                desc is the text for this response that will be displayed
                
          sequence of numeric digits - An index that will be used to search for
          a predefined custom response menu for this vendor.  Before using this, 
          you should check the first part of client version reported by Cadpage 
          to ensure that this version supports the predefined custom response 
          menu you wish to use.  If it doesn't, use the Custom Response menu sequence.


Cadpage acknowledgments
If an ack_url has been included in a text page, Cadpage will automatically 
respond by opening the specified URL.  If ack_req has been set, it will allow
the user to report their responding/non-responding status manually.  These reports
will be sent the the ack_url URL with parameters
type:     Type of acknowledgment
          AUTO - automatic sent as soon as Cadpage receives message
          ACK  - sent when user performs any action in response to page
          RESP - sent when user indicates they are responding to call
          NO   - sent when user indicates they are not responding to call
location: User GPS coordinates if requested and enabled
paid_status: Cadpage subscription status if requested
             YES - user is a paid Cadpage subscriber entitled to any discounts that brings
             NO  - user is not a paid Cadpage subscriber
paid_expire_date: If subscription status is YES, this contains the date the subscription
                  expires as MM/DD/YYYY.  If the subscription never expires, it has a value
                  of "LIFE".  
version   Cadpage client version                           

Note: If message content was delivered through content_url instead of a content 
keyword an automatic acknowledgment is redundant and will not be sent.


Client version codes
All HTTP requests originated by recent versions of Cadpage will include a client version code.
This code will consist of two numeric portionas separated by a dash.  The first will be a one
or possibly 2 digit number that is tied specifically to your vendor interface.  In particular
this number should be used to confirm whether or not this version of Cadpage supports any
particular precompiled response menu before you try to use it.  The second number will be 5-6
digits long and is tied to the actual Cadpage release code. 


SMS text message discovery

Any regular SMS text message that has been identified as a CAD page or general
alert that starts with your assigned SMS trigger code will be identified as
coming from your location.  The trigger code will be stripped off and the text
message will be processed normally.  But the next time the users opens Cadpage
they will be asked if would like to sign up for direct C2DM services.

Any received text message that starts with the sequence
*CADPAGEQ*
and contains a valid URL that starts with your configured base URL address
will be considered a Cadpage query.  The message will be intercepted and the
user will be asked if they would like to sign up for direct C2DM services.  If
they concur, a regular user initiated register request will be sent, but it
will be sent to the URL included in the text message with the additional
parameters added.

These *CADPAGEQ* discover pages will show up in user inboxes where Cadpage is
not installed or enabled.  The text page has be be user friendly and readable.

The *CADPAGEQ* discover page will not work if received as an MMS message with
a sender address that does not match the sender filter.  When an MMS message
fails to pass the sender filter, we don't bother retrieving the message content
so we can't tell if it starts with *CADPAGEQ*.

Note that none of these will work if the pages is relayed through another
messaging service that adds it's own message headers. 


**** Finance issues:

A revenue sharing arrangement with Cadpage, where Cadpage gets some percentage
of your income from C2DM registered phones instead of collecting from the end users,
is strongly encouraged, but not required to use this interface.

If the subscribing user already has a current paid Cadpage subscription, we would
prefer that you credit the user for whatever amount would normally be sent to
Cadpage.  You can determine if they have a paid subscription by sending the device
a PING request with a P code in the ack_req field.  Cadpage will respond with
an acknowledge query that contains a paid_status value of either YES or NO.

**** General notes:

Might be nice to have a web page feature allowing user to locate and map their
own phone if it happened to be misplaced.

Also might be worth trying to give users an option initiate a reregistration 
from your web page.  This would be used when Cadpage had to be reinstalled on 
the phone in hopes that you could restore the registration info that we lost.  
Whether it will work or not remains to be seen.

We should probably make an effort to make sure that we have format/location codes 
for all of your clients.  And code new ones for any we are missing.
