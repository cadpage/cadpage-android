Using the Cadpage Parser in a standalone server environment

The Cadpage Parser is distributed as the CadpageParser.jar file available from
http://www.cadpage.org/download-cadpage.  It is distributred under a GPL3 license, 
the source code is available from http://code.google.com/p/cadpage

It can be called directly from a Java program, but will most commonly be 
executed as a standalone process   You do have to have Java 1.5 or better
installed on your system.

The command to run the Cadpage parser is
java -jar CadpageParser.jar <arguments>

Once started it will read page message information from stdin and output the parsed 
results to stdout.  Anything displayed on stderr indicates a fatal error and should
be logged and reported to the developers.

Arguments can be one of
FLGS=<flags>
   Flags can be any combination of
   P - Preparse message to remove artifacts inserted by a upstream message
       service.  Should not be necessary if page is coming directly from 
       dispatch CAD software
   G - Messages should be parsed as general alerts if not recognized as CAD pages
   default value "G"
FMT=<format code>
   format code is the parser format code.  Default value - read from stdin
SUBJ=<message subject>
   message subject.  Default value - read from stdin
   
Any parameter value set to a dash (-) will be read from stdin for every message
to be parsed

The parser will start by optionally reading values for flags, format code, and 
message subject as separate lines from stdin.  It will then read any number of
lines of text message, which can be terminated by an
<*EOD*>
marker, or by a regular EOF on stdin.  Parser will terminate after parsing this
message if input was terminated by a regular EOF.

The subject and text information will be parsed according to the defined
format code and the results written to stdout terminated by a
<*EOD*>
marker.  If the parser fails to parse this text, it will output an immediate
<*EOD*>
marker


Example #1 - Parser dedicated to handling a single location, pages received
directly from dispatch.  Subject is first line of input

java -jar CadpageParser.jar FLGS= FMT=ORBentonCounty 
Corvallis Alert
INC: CODE 1 MEDICAL
ADD:1740 MAIN ST
APT:
CITY:PHILOMATH
X:N 17TH ST * N 18TH ST
MAP:540-365
CFS:0907010-119
DIS:PHILOMATH FIRE
<*EOD*>


Example #2 - Parser handles pages from multiple locations, pages may be received
from an upstream messaging service which has already attempted to embed the
message subject in the message text.  Format code is first line of input.  Subject
is the blank second line.  The actual message text starts with the S: line

java -jar CadpageParser.jar FLGS=P FMT=ORBentonCounty 
ORBentonCounty

S: Corvallis Alert
M: INC: CODE 1 MEDICAL
ADD:1740 MAIN ST
APT:
CITY:PHILOMATH
X:N 17TH ST * N 18TH ST
MAP:540-365
CFS:0907010-119
DIS:PHILOMATH FIRE
<*EOD*>


Example #3 - Parser is invoked once per text page, pages may be received
from an upstream messaging service which has already attempted to embed the
message subject in the message text. Input is terminated by a hard EOF

java -jar CadpageParser.jar FLGS=PG FMT=ORBentonCounty "SUBJ=Corvallis Alert" 
ORBentonCounty
INC: CODE 1 MEDICAL
ADD:1740 MAIN ST
APT:
CITY:PHILOMATH
X:N 17TH ST * N 18TH ST
MAP:540-365
CFS:0907010-119
DIS:PHILOMATH FIRE


What is returned is a list of name:value pairs separated by newline characaters.
The possible name values are as follows:

These fields contain important information that should always be reported to the user
PRI     Call priority
CODE    Short Call Code
CODE    Call code
CALL    Call description
PLACE   Place or business name
ADDR    Incident address
APT     Apartment
CITY    Incident City
ST      Incident State
X       Cross Streets
BOX     Alarm box code
MAP     Map Code
CH      Radio Channel
UNIT    Dispatched unit(s)
INFO    Other useful information
ID      Call ID or number

These field contain useful information that you might want to suppress out of
concerns for caller/patient privacy.  Cadpage has a configurable option to 
determine whether or not these are displayed.  Default is off
NAME    Pt/Caller name
PHONE   Pt/Caller phone

More useful information that is not displayed by default because most users
only responde to one station and department and will never get calls to any
other station or department.  Cadpage has another option to turn this display on.
SRC     Station or department code

May or may not be useful
PARSER  Parser code - identifies the Cadpage parser used to decode the call information

These are mapping support fields.  They are generally not displayed to the user
but are used to construct the search string to be passed to the mapping software
when an incident map is requested
GPS     GPS Coordinates
REC_GPS Y if parser recommends using GPS coordinates in preference to map address
MADDR   Mapping address if different from incident address
MCITY   Map city if different from reported city
DCITY   Default City
DST     Default State
CO      Country code

Cadpage has a user option to determine whether GPS coordines should be used instead
of mapping addresses to identify the location.  It has three states.  Use GPS, use
address, or the default follow parser recomendation.
The GPS coordinates should be used if GPS coordinates are present the user option
user option or REC_GPS flag recommends use of GPS coordinates.
When building a search string from the address information, use the following 
information separated by commas.
MADDR field if present, ADDR field otherwise  (Replace & with AT in result)
MCITY field if present, otherwise CITY field if present, otherwise DCITY field
ST field if present, DST field otherwise
CO field if present

This field defines an URL where users can display more information about the call.
Typically this results in a "More Info" button appearing that users can press to
open this page in a web browser.
URL     URL with more information about the call.

These fields contain dispatch date and time message extracted from message.  They
are not always present and should not be relied upon to determine the reported
message time.  
DATE  Dispatch date in mm/dd/yy or mm/dd/yyyy form or mm/dd **
TIME  Dispatch time in hh:mm:ss or hh:mm form **
The date/time reporting algorithm should use these fields if present.
Otherwise it should use the date/time the vendor reported receiving the
message, which probably need to be adjusted from UMT to local time.
Otherwise report the date/time them message was received.
Some fancy logic may be required when matching a time from one source with
a date from a different source to correct problems that occur when the calls
were on different sides of midnight.

Fields that may allow department map pages to be displayed online.  Currently only supported
for Benton County, OR
MP_STATUS:
Is only present if the parser supports Map Page viewing, whether or not a map page is present 
for this call.  Possible values for now are ANY, which means any page view can be used, and ADOBE, 
which means we have determined that only the real Adobe Reader app can be used to display these pages.

MP_URL:
contains the URL needed to view the map page for this call.  This will only be present if there is a 
map page associated with this call.


Sending parsed page information to Cadpage/Android
For best results, the entire string of parsed key/value pairs should be sent to 
Cadpage/Android with a message format code of "Cadpage".  Modifying or dropping 
key values you are not interested in can cause loss of information or mapping 
problems.  If these modifications cannot be avoided, the following fields *MUST*
be included if Cadpage is to map the incident properly.
ADDR
CITY or DCITY
ST or DST
MADDR or PARSER

*** For more information ****

This file, and other important documentation, is part of the github source archive
that can be checked out from https://github.com/cadpage/cadpage-android  The various interface
specs are in a cadpage/docs directory.

The one file that will be of particular interest is MsgFormats.txt which lists all
of the message formats we currently support, plus a bunch of others that are in
different stages of being implemented.  The name of the Parser used can be found
in parenthesis beside the location.  The Format code associated with that parser
is simply the parser name with the word Parser stripped off.

There are other cool things you can do with Git, look for the online manual 
if you are interested.  Contact us if you want commit rights.
